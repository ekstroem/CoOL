###########################################################!
########## Causes of outcome learning #####################
###########################################################!
#if(!require("devtools")) insntall.packages("devtools")
#devtools::install_github("ekstroem/CoOL")
library(SRCL) # library(CoOL)
setwd("C:/Users/lvb917/Google Drev/gdrive - SCL/Manuscripts/Epi paper/Figures/Redo")
set.seed(1)
data <- CoOL_0_working_example(n=40000) # use 40 000 to replicate the paper
outcome_data <- data[,1]
exposure_data <- CoOL_0_binary_encore_exposure_data(data[,-1])
model <- CoOL_1_initiate_neural_network(inputs=ncol(exposure_data), output = outcome_data) # Initiate the non-negative model
model <- CoOL_2_train_neural_network(X_train=exposure_data, Y_train=outcome_data, model=model, epochs=300) # Train the non-negative model (The model can be retrained)
# Use below to combine all plots (See the note regarding the dendrogram)
## layout(matrix(c(1,1,2,2,3,3,4,4,4,5,5,5,6,6,6,6,6,6), 3, 6, byrow = TRUE))
plot(model$train_performance,type='l',yaxs='i',ylab="Mean squared error",xlab="Epochs",main="Performance - training data") # Model performance
CoOL_3_plot_neural_network(model,names(exposure_data),5/max(model[[1]]), title = "Model") # Model visualization
CoOL_4_AUC(outcome_data,exposure_data,model) # AUC
risk_contributions <- CoOL_5_layerwise_relevance_propagation(exposure_data,model) # Risk contributions
CoOL_6_dendrogram(risk_contributions,number_of_subgroups = 3) # Dendrogram
## save the dendrogram if it should be part of a combined plot by using below line
## png("dendrogram.png",units = 'in',res=300,height = 4,width = 4); CoOL_6_dendrogram(risk_contributions,number_of_subgroups = 3); dev.off(); library(imager);im <- load.image("dendrogram.png");par(mar=c(0,0,0,0));plot(load.image("dendrogram.png"),axes=F);par(mar=c(5,5,3,2))
sub_groups <- CoOL_6_sub_groups(risk_contributions,number_of_subgroups = 3) # Assign sub-groups
CoOL_7_prevalence_and_mean_risk_plot(risk_contributions,sub_groups) # Prevalence and mean risk plot
CoOL_8_mean_risk_contributions_by_sub_group(risk_contributions, sub_groups) #  Mean risk contributions by sub-groups


CoOL_all <- function(data,epochs=2000,patience=100) {
  outcome_data <- data[,1]
  exposure_data <- CoOL_0_binary_encore_exposure_data(data[,-1])
  model <- CoOL_1_initiate_neural_network(inputs=ncol(exposure_data), output = outcome_data)
  model <- CoOL_2_train_neural_network(X_train=exposure_data, Y_train=outcome_data, model=model, epochs=epochs,patience = patience)
layout(matrix(c(1,1,2,2,3,3,4,4,4,5,5,5,6,6,6,6,6,6), 3, 6, byrow = TRUE))
  plot(model$train_performance,type='l',yaxs='i',ylab="Mean squared error",xlab="Epochs",main="Performance - training data")
  CoOL_3_plot_neural_network(model,names(exposure_data),5/max(model[[1]]), title = "Model")
  CoOL_4_AUC(outcome_data,exposure_data,model)
  risk_contributions <- CoOL_5_layerwise_relevance_propagation(exposure_data,model)
  png("dendrogram.png",units = 'in',res=300,height = 4,width = 4)
  CoOL_6_dendrogram(risk_contributions,number_of_subgroups = 3)
  dev.off()
  library(imager);im <- load.image("dendrogram.png");par(mar=c(0,0,0,0));plot(load.image("dendrogram.png"),axes=F);par(mar=c(5,5,3,2))
  sub_groups <- CoOL_6_sub_groups(risk_contributions,number_of_subgroups = 3)
  CoOL_7_prevalence_and_mean_risk_plot(risk_contributions,sub_groups)
  CoOL_8_mean_risk_contributions_by_sub_group(risk_contributions, sub_groups)
}


##### Repeated 100 times ####
setwd("C:/Users/lvb917/Google Drev/gdrive - SCL/Manuscripts/Epi paper/Figures/Redo")
for (simulation in 1:10) {
print(paste0("Simulation ",simulation," at time :",Sys.time()))
set.seed(simulation)
data <- CoOL_0_working_example(n=40000)
png(paste0("Repeated_",simulation,".png"),units = 'in',res=300,height = 8,width = 7)
CoOL_all(data)
dev.off()
}

#### Added noise #####
setwd("C:/Users/lvb917/Google Drev/gdrive - SCL/Manuscripts/Epi paper/Figures/Redo")
for (add_noise in 10:10) {
set.seed(12345)
data <- CoOL_0_working_example(n=40000)
var_names <-colnames(data)
if (add_noise > 0) {
  for (x in 1:add_noise)  {
    data <- cbind(data,sample(0:1,nrow(data),replace = TRUE))  }
  colnames(data) <- c(var_names,paste0("noise_",1:c(1*add_noise))) }
png(paste0("Add_noise_",add_noise,".png"),units = 'in',res=300,height = 8,width = 7)
CoOL_all(data)
dev.off()
}

