---
title: "Drivers of child mortality - overview of data"
date: "Version date: `r format(Sys.time(), '%d.%m.%Y')`"
header-includes:
- \usepackage{placeins}
- \usepackage{pdflscape}
  
output: pdf_document
extra_dependencies: ["float"]
always_allow_html: true
 
editor_options: 
  chunk_output_type: console
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE,fig.pos = "H", out.extra = "") #,fig.height=3)
options(tinytex.verbose = TRUE)
library(knitr)
```


# Flowchart
```{r Flowchart,fig.width=9,fig.height=9}
library(Gmisc, quietly = TRUE)
library(glue)
library(htmlTable)
library(grid)
library(magrittr)
library(haven)


flow <- read_dta("P:/Studier/1000_days/Data_R/flow_chart_1_all.dta")
f_1 <- boxGrob(glue("Unique IDs from pregnancy termination born after 1 jan 1987 and before 31 dec 2016",
                           "n = {nrow(flow)}",
                           .sep = "\n"))

flow <- read_dta("P:/Studier/1000_days/Data_R/flow_chart_2_outcome.dta")
f_2 <- boxGrob(glue("Also exists in outcome data",
                          "n = {nrow(flow)}",
                           .sep = "\n"))

flow <- read_dta("P:/Studier/1000_days/Data_R/flow_chart_3_visit_date.dta")
f_3 <- boxGrob(glue("Who also have a pregnancy_termination visit date",
                          "n = {nrow(flow)}",
                           .sep = "\n"))

flow <- read_dta("P:/Studier/1000_days/Data_R/flow_chart_4_visit_birthday.dta")
f_4 <- boxGrob(glue("Who’s first pregnancy_termination visit with\nadditional registration data is after or at the birthday",
                          "n = {nrow(flow)}",
                           .sep = "\n"))

flow <- read_dta("P:/Studier/1000_days/Data_R/flow_chart_5_enter_6_weeks.dta")
f_5 <- boxGrob(glue("Who’s first pregnancy_termination visit is within\nthe first 6 weeks of life (many from the older birth cohorts are excluded)",
                          "n = {nrow(flow)}",
                           .sep = "\n"))

flow <- read_dta("P:/Studier/1000_days/Data_R/flow_chart_6_status_info.dta")
f_6 <- boxGrob(glue("With visits information in status  dataset)",
                          "n = {nrow(flow)}",
                           .sep = "\n"))


flow <- read_dta("P:/Studier/1000_days/Data_R/flow_chart_7_vital_after_birth.dta")
f_7 <- boxGrob(glue("Has the last vital status date after birth",
                          "n = {nrow(flow)}",
                           .sep = "\n"))


flow <- read_dta("P:/Studier/1000_days/Data_R/flow_chart_8_vital_after_birth.dta")
f_8 <- boxGrob(glue("Has the last vital status date after entry",
                          "n = {nrow(flow)}",
                           .sep = "\n"))

grid.newpage()
vert <- spreadVertical(f_1,f_2,f_3,f_4,f_5,f_6,f_7,f_8)

for (i in 1:(length(vert) - 1)) {
  connectGrob(vert[[i]], vert[[i + 1]], type = "vert") %>%
    print
}

# Print boxes
vert

```


```{r,fig.height=3}
# Study design
par(mar=c(4,4,3,2))
plot(0,0,type='n',xlim=c(1987,2020),ylim=c(0,3),axes=F,ylab="Age [Years, months]",xlab="Calendar",yaxs='i',xaxs='i',frame.plot = F,main="Lexis diagram over the intended included birth years and age groups")
axis(1,at=1987:2020,labels = F)
axis(1,at=0.5+c(1987:2019),labels=1987:2019,tick=F)
axis(2,seq(0,3,1/12),labels=F,col="darkgrey",cex=.5)
axis(2,0:3,las=2, lwd =2)
arrows(x0=1987:2017,x1=1987:2017+3,y0=0,y1=3,length=0,col="grey")
arrows(x0=1987+1.5/12,x1=2017+1.5/12,y0=1.5/12,length=0,lwd=3)
arrows(x0=1990,x1=2020,y0=3,length=0,lwd=3)
arrows(x0=1987+1.5/12,x1=1987+3,y0=1.5/12,y1=3,length=0,lwd=3)
arrows(x0=2017+1.5/12,x1=2017+3,y0=1.5/12,y1=3,length=0,lwd=3)

```

```{r}
data <- read_dta("P:/Studier/1000_days/Temp_data/data2.dta")
hist(data$Birthdate,breaks=20,freq = T,ylim=c(100,5000),yaxs="i", main="Birth date by calendar year (values below 100 are not shown)")
axis(2,c(100,10000))
```

```{r}
data <- read_dta("P:/Studier/1000_days/Data_R/des_xdia.dta")
hist(data$Xdia,breaks=20,freq = T,ylim=c(100,5000),yaxs="i", main="Xdia by calendar year (values below 100 are not shown)")
axis(2,c(100,10000))

```

```{r, echo=T,eval=F}
#*** Status variable ***
#gen Xcau = 1 if ExitVitalStatus == "1"
#replace Xcau = 2 if HouseholdStatus == "2"
#replace Xcau = 3 if ExitVitalStatus == "2"
#replace Xcau = 1 if Xdia > Birthdate_3
#replace Xdia_questionnaire = Birthdate_3 if Xdia > Birthdate_3
```


```{r}
data <- read_dta("P:/Studier/1000_days/Data_R/des_Xcau.dta")
kable(table(data$Xcau, useNA="always"),col.names = c("XCau","Freq"))
```


```{r,fig.height=3}
data <- read_dta("P:/Studier/1000_days/Data_R/des_strate.dta")
#range(round(data$'_Y'*100))
data$col <- colorRampPalette(c("white","dodgerblue"))(max(round(data$'_Y'*100)))[round(data$'_Y'*100)]
#head(data)

par(mar=c(4,4,3,2))
plot(0,0,type='n',xlim=c(1987,2020),ylim=c(0,3),axes=F,ylab="Age [Years, months]",xlab="Calendar",yaxs='i',xaxs='i',frame.plot = F,main="Person years by age and birth cohort")
for (yy in 1987:2016) {
  for (a in 0:2) {
polygon(c(a+yy,a+yy+1,a+yy+2,a+yy+1),c(a,a+1,a+1,a),border = F,col=data$col[data$Birthyear==yy&data$age==a])
  }
}
rect(0,0,3000,1.5/12,border = F,col="white")
axis(1,at=1987:2020,labels = F)
axis(1,at=0.5+c(1987:2019),labels=1987:2019,tick=F)
axis(2,seq(0,3,1/12),labels=F,col="darkgrey",cex=.5)
axis(2,0:3,las=2, lwd =2)
arrows(x0=1987:2017,x1=1987:2017+3,y0=0,y1=3,length=0,col="grey")
arrows(x0=1987+1.5/12,x1=2017+1.5/12,y0=1.5/12,length=0,lwd=3)
arrows(x0=1990,x1=2020,y0=3,length=0,lwd=3)
arrows(x0=1987+1.5/12,x1=1987+3,y0=1.5/12,y1=3,length=0,lwd=3)
arrows(x0=2017+1.5/12,x1=2017+3,y0=1.5/12,y1=3,length=0,lwd=3)

```

```{r,fig.height=3}
library(haven)
data <- read_dta("P:/Studier/1000_days/Data_R/des_strate.dta")
data$col <- colorRampPalette(c("green","orange", "red","black"))(max(round(data$'_Rate')))[round(data$'_Rate')]
#head(data)

par(mar=c(4,4,3,2))
plot(0,0,type='n',xlim=c(1987,2020),ylim=c(0,3),axes=F,ylab="Age [Years, months]",xlab="Calendar",yaxs='i',xaxs='i',frame.plot = F,main="Mortality rate by age and birth cohort")
for (yy in 1987:2016) {
  for (a in 0:2) {
polygon(c(a+yy,a+yy+1,a+yy+2,a+yy+1),c(a,a+1,a+1,a),border = F,col=data$col[data$Birthyear==yy&data$age==a])
  }
}
rect(0,0,3000,1.5/12,border = F,col="white")
axis(1,at=1987:2020,labels = F)
axis(1,at=0.5+c(1987:2019),labels=1987:2019,tick=F)
axis(2,seq(0,3,1/12),labels=F,col="darkgrey",cex=.5)
axis(2,0:3,las=2, lwd =2)
arrows(x0=1987:2017,x1=1987:2017+3,y0=0,y1=3,length=0,col="grey")
arrows(x0=1987+1.5/12,x1=2017+1.5/12,y0=1.5/12,length=0,lwd=3)
arrows(x0=1990,x1=2020,y0=3,length=0,lwd=3)
arrows(x0=1987+1.5/12,x1=1987+3,y0=1.5/12,y1=3,length=0,lwd=3)
arrows(x0=2017+1.5/12,x1=2017+3,y0=1.5/12,y1=3,length=0,lwd=3)


```

```{r}
library(haven)
data <- read_dta("P:/Studier/1000_days/Temp_data/data.dta")
library(survival)
plot(0,0,xlim=c(0,4), xlab="Age in years",ylab="Risk at given age (Cumulative incidence)",col="white",ylim=c(0,.17),yaxs='i',xaxs='i', axes = F,main="Mortality by birth years")
axis(1,seq(0,3,0.5))
axis(2,las=2)
abline(v=6*7/365.25,lty=2)
#fit <- survfit(Surv(age_entry,age_exit, Xcau == 3)~1, data=data)
#points(fit$time,1-fit$surv,type='l',lwd=5)
#text(3,1-fit$surv[length(fit$surv)],"All birth cohorts",pos=4)
fit <- survfit(Surv(age_entry,age_exit, Xcau == 3)~1, data=data[data$Birthyear<=1994,])
points(fit$time,1-fit$surv,type='l',lwd=1)
text(3,1-fit$surv[length(fit$surv)],"1987-1994",pos=4)
fit <- survfit(Surv(age_entry,age_exit, Xcau == 3)~1, data=data[data$Birthyear>=1995&data$Birthyear<2000,])
points(fit$time,1-fit$surv,type='l',lwd=1)
text(3,1-fit$surv[length(fit$surv)],"1995-1999",pos=4)
fit <- survfit(Surv(age_entry,age_exit, Xcau == 3)~1, data=data[data$Birthyear>=2000&data$Birthyear<2005,])
points(fit$time,1-fit$surv,type='l',lwd=1)
text(3,1-fit$surv[length(fit$surv)],"2000-2004",pos=4)
fit <- survfit(Surv(age_entry,age_exit, Xcau == 3)~1, data=data[data$Birthyear>=2005&data$Birthyear<2010,])
points(fit$time,1-fit$surv,type='l',lwd=1)
text(3,1-fit$surv[length(fit$surv)],"2005-2009",pos=4)
fit <- survfit(Surv(age_entry,age_exit, Xcau == 3)~1, data=data[data$Birthyear>=2010,])
points(fit$time,1-fit$surv,type='l',lwd=1)
text(3,1-fit$surv[length(fit$surv)],"2010-2016",pos=4)

```


Questions:

- less person time from 2014? and around the war
- express uncertainty
- smaller/finer intervals
- some early years, mortality higher in older ages?
- Passer dødsfald med MUAC artiklen?
- Merge på pregnancy termination dato < 3 måneder!
- Outcome id duplicater id pregnancy termination tabel -> ane
- Move X cau correct?
- Hvordan skal vi bruge date_precision??? i alle date variable...
- Ghost?
- Addresseret alle Anes pointer
- Set på QSL igen (ud fra anes pointer)
- Can we use census data on drinking water etc???

\begin{landscape}


```{r, fig.height=20,fig.width=36}
library(imager)
im <- load.image("Figures/intended_variables.jpg")
plot(im,axes=F)
```

\newpage

```{r, fig.height=20,fig.width=36}
library(imager)
par(mfrow=c(2,3),mar=c(0,0,0,0))
im <- load.image("Figures/zones_1987_2012.png")
plot(im,axes=F)
im <- load.image("Figures/zones_1987_1994.png")
plot(im,axes=F)
im <- load.image("Figures/zones_1995_1999.png")
plot(im,axes=F)
im <- load.image("Figures/zones_2000_2004.png")
plot(im,axes=F)
im <- load.image("Figures/zones_2005-2009.png")
plot(im,axes=F)
im <- load.image("Figures/zones_2010-2012.png")
plot(im,axes=F)
```


\end{landscape}
\newpage

# Variable distributions compared within birth years and by category 

```{r, fig.height=4,fig.width=10,results='asis', fig.pos='H', warning=FALSE}
library(haven)
#library(kableExtra)
library(knitr)
library(gplots)
library(imager)
library(ggplot2)
library(gridExtra)
data <- read_dta("P:/Studier/1000_days/Temp_data/data2.dta")
environment = c("Location")
household=c("mat_age","Mother_LivesWithFather","BirthNumber","BedNet","Roof","Electricity", "TV", "Toilet", "Mother_Schooling","Mother_AnyCoWifes","Mother_WorkOutsideHouse", "Ethnicity")
personal=c("singleton","Caesarian","Mother_AnyConsultations","low_WeightAtObsDate","low_BirthWeight","BCGScar","Hospital")
overview <- cbind(environment,household,personal)
overview <- ifelse(overview!="","","")
overview[1:length(environment),1] <- environment
overview[1:length(household),2] <- household
overview[1:length(personal),3] <- personal
kable(overview)

cat('\n## Environment \n')

for (i in environment) {
# # kable(table(data[[x]],data$Birthyear,useNA ="always"))})
recodes <- t(table(data[,grep(i,names(data))]))
recodes <- ifelse(recodes>0,"X","")
#titler <- names(data[,grep(i,names(data))])
#cat(paste0('## ', i,'\n')) 
#print(kable(recodes))
# kable(recodes, "latex") %>%
#   kable_styling("striped") %>%
#   as_image("Figures/table.png")setwd("P:/Studier/1000_days/Figures")
setwd("P:/Studier/1000_days/Figures")
png("test.png",width = 5,height = 1.5, units = 'in', res=300)
par(mar=c(0,0,0,0))
p<-tableGrob(recodes, theme = ttheme_minimal(base_size = 12, base_colour = "black", base_family = "",  parse = FALSE, padding = unit(c(4, 4), "mm"),plot.margin = unit(c(0,0,0,0),"mm")))
grid.arrange(p)
dev.off()

#cat('\n')
#print(recodes)

par(mar=c(0,0,0,0))
var <- data[[i]]
miss_est <- round(mean(var=="")*100)
if (is.character(var)) var <- ifelse(var == "","_Missing",var)
if (is.character(var)) var <- ifelse(is.na(var),"_Missing",var)
png("P:/Studier/1000_days/Figures/bybirthyear.png",units = 'in',res=300,height = 4,width = 9)
heatmap.2(table(var,data$Birthyear,useNA ="ifany")[,-c(1+length(unique(data$Birthyear)))],dendrogram = "none", Colv=F,Rowv = F, col = colorRampPalette(c("black","dodgerblue"))(100),main=paste0(i," by birth year (scaled by column)\nblack=low, blue=high, bottom row = missing\n (missing=",miss_est,"%)"),scale = 'column', density.info= "none",trace="none",key=F,margins = c(3,4),offsetCol = 0,offsetRow = 0)
dev.off()
png("P:/Studier/1000_days/Figures/bycategory.png",units = 'in',res=300,height = 4,width = 9)
heatmap.2(table(var,data$Birthyear,useNA ="ifany")[,-c(1+length(unique(data$Birthyear)))],dendrogram = "none", Colv=F,Rowv = F, col = colorRampPalette(c("black","dodgerblue"))(100),main=paste0(i," by category (scaled by row)\nblack=low, blue=high, bottom row = missing\n (missing=",miss_est,"%)"),scale = 'row', density.info= "none",trace="none",key=F,margins = c(3,4),offsetCol = 0,offsetRow = 0)
dev.off()
tab1 <- load.image("P:/Studier/1000_days/Figures/test.png")
im1 <- load.image("P:/Studier/1000_days/Figures/bybirthyear.png")
im2 <- load.image("P:/Studier/1000_days/Figures/bycategory.png")
par(mar=c(0,0,0,0));par(mfrow=c(1,2))
layout(matrix(c(1,2,3,4,3,4), 3, 2, byrow = TRUE));par(mar=c(0,0,0,0))
plot(0,0,type='n',frame.plot = FALSE,axes=F); text(0,0,i, cex=3) 
plot(load.image("P:/Studier/1000_days/Figures/test.png"),axes=F)
plot(load.image("P:/Studier/1000_days/Figures/bybirthyear.png"),axes=F)
plot(load.image("P:/Studier/1000_days/Figures/bycategory.png"),axes=F)
cat('\n')
}


cat('\n## Household \n')

for (i in household) {
# # kable(table(data[[x]],data$Birthyear,useNA ="always"))})
recodes <- t(table(data[,grep(i,names(data))]))
recodes <- ifelse(recodes>0,"X","")
#titler <- names(data[,grep(i,names(data))])
#cat(paste0('## ', i,'\n')) 
#print(kable(recodes))
# kable(recodes, "latex") %>%
#   kable_styling("striped") %>%
#   as_image("Figures/table.png")setwd("P:/Studier/1000_days/Figures")
setwd("P:/Studier/1000_days/Figures")
png("test.png",width = 5,height = 1.5, units = 'in', res=300)
par(mar=c(0,0,0,0))
p<-tableGrob(recodes, theme = ttheme_minimal(base_size = 12, base_colour = "black", base_family = "",  parse = FALSE, padding = unit(c(4, 4), "mm"),plot.margin = unit(c(0,0,0,0),"mm")))
grid.arrange(p)
dev.off()

#cat('\n')
#print(recodes)

par(mar=c(0,0,0,0))
var <- data[[i]]
miss_est <- round(mean(var=="")*100)
if (is.character(var)) var <- ifelse(var == "","_Missing",var)
if (is.character(var)) var <- ifelse(is.na(var),"_Missing",var)
png("P:/Studier/1000_days/Figures/bybirthyear.png",units = 'in',res=300,height = 4,width = 9)
heatmap.2(table(var,data$Birthyear,useNA ="ifany")[,-c(1+length(unique(data$Birthyear)))],dendrogram = "none", Colv=F,Rowv = F, col = colorRampPalette(c("black","dodgerblue"))(100),main=paste0(i," by birth year (scaled by column)\nblack=low, blue=high, bottom row = missing\n (missing=",miss_est,"%)"),scale = 'column', density.info= "none",trace="none",key=F,margins = c(3,4),offsetCol = 0,offsetRow = 0)
dev.off()
png("P:/Studier/1000_days/Figures/bycategory.png",units = 'in',res=300,height = 4,width = 9)
heatmap.2(table(var,data$Birthyear,useNA ="ifany")[,-c(1+length(unique(data$Birthyear)))],dendrogram = "none", Colv=F,Rowv = F, col = colorRampPalette(c("black","dodgerblue"))(100),main=paste0(i," by category (scaled by row)\nblack=low, blue=high, bottom row = missing\n (missing=",miss_est,"%)"),scale = 'row', density.info= "none",trace="none",key=F,margins = c(3,4),offsetCol = 0,offsetRow = 0)
dev.off()
tab1 <- load.image("P:/Studier/1000_days/Figures/test.png")
im1 <- load.image("P:/Studier/1000_days/Figures/bybirthyear.png")
im2 <- load.image("P:/Studier/1000_days/Figures/bycategory.png")
par(mar=c(0,0,0,0));par(mfrow=c(1,2))
layout(matrix(c(1,2,3,4,3,4), 3, 2, byrow = TRUE));par(mar=c(0,0,0,0))
plot(0,0,type='n',frame.plot = FALSE,axes=F); text(0,0,i, cex=3) 
plot(load.image("P:/Studier/1000_days/Figures/test.png"),axes=F)
plot(load.image("P:/Studier/1000_days/Figures/bybirthyear.png"),axes=F)
plot(load.image("P:/Studier/1000_days/Figures/bycategory.png"),axes=F)
cat('\n')
}

cat('\n## Personal \n')

for (i in personal) {
# # kable(table(data[[x]],data$Birthyear,useNA ="always"))})
recodes <- t(table(data[,grep(i,names(data))]))
recodes <- ifelse(recodes>0,"X","")
#titler <- names(data[,grep(i,names(data))])
#cat(paste0('## ', i,'\n')) 
#print(kable(recodes))
# kable(recodes, "latex") %>%
#   kable_styling("striped") %>%
#   as_image("Figures/table.png")setwd("P:/Studier/1000_days/Figures")
setwd("P:/Studier/1000_days/Figures")
png("test.png",width = 5,height = 1.5, units = 'in', res=300)
par(mar=c(0,0,0,0))
p<-tableGrob(recodes, theme = ttheme_minimal(base_size = 12, base_colour = "black", base_family = "",  parse = FALSE, padding = unit(c(4, 4), "mm"),plot.margin = unit(c(0,0,0,0),"mm")))
grid.arrange(p)
dev.off()

#cat('\n')
#print(recodes)

par(mar=c(0,0,0,0))
var <- data[[i]]
miss_est <- round(mean(var=="")*100)
if (is.character(var)) var <- ifelse(var == "","_Missing",var)
if (is.character(var)) var <- ifelse(is.na(var),"_Missing",var)
png("P:/Studier/1000_days/Figures/bybirthyear.png",units = 'in',res=300,height = 4,width = 9)
heatmap.2(table(var,data$Birthyear,useNA ="ifany")[,-c(1+length(unique(data$Birthyear)))],dendrogram = "none", Colv=F,Rowv = F, col = colorRampPalette(c("black","dodgerblue"))(100),main=paste0(i," by birth year (scaled by column)\nblack=low, blue=high, bottom row = missing\n (missing=",miss_est,"%)"),scale = 'column', density.info= "none",trace="none",key=F,margins = c(3,4),offsetCol = 0,offsetRow = 0)
dev.off()
png("P:/Studier/1000_days/Figures/bycategory.png",units = 'in',res=300,height = 4,width = 9)
heatmap.2(table(var,data$Birthyear,useNA ="ifany")[,-c(1+length(unique(data$Birthyear)))],dendrogram = "none", Colv=F,Rowv = F, col = colorRampPalette(c("black","dodgerblue"))(100),main=paste0(i," by category (scaled by row)\nblack=low, blue=high, bottom row = missing\n (missing=",miss_est,"%)"),scale = 'row', density.info= "none",trace="none",key=F,margins = c(3,4),offsetCol = 0,offsetRow = 0)
dev.off()
tab1 <- load.image("P:/Studier/1000_days/Figures/test.png")
im1 <- load.image("P:/Studier/1000_days/Figures/bybirthyear.png")
im2 <- load.image("P:/Studier/1000_days/Figures/bycategory.png")
par(mar=c(0,0,0,0));par(mfrow=c(1,2))
layout(matrix(c(1,2,3,4,3,4), 3, 2, byrow = TRUE));par(mar=c(0,0,0,0))
plot(0,0,type='n',frame.plot = FALSE,axes=F); text(0,0,i, cex=3) 
plot(load.image("P:/Studier/1000_days/Figures/test.png"),axes=F)
plot(load.image("P:/Studier/1000_days/Figures/bybirthyear.png"),axes=F)
plot(load.image("P:/Studier/1000_days/Figures/bycategory.png"),axes=F)
cat('\n')
}

```





<!--

# Introduction
This protocol describes a study of causes of child mortality in urban Guinea-Bissau. We will utilize decades of health data from Guinea-Bissau in order to understand whether there are different sets of causes that are driving childhood mortality. The Bandim Health Project in Guinea-Bissau has been running a health and demographic surveillance system for 40 years to understand causes of child mortality (Byberg et al., 2017). We will use detailed information on maternal obstetric history, antenatal care, gestational age, vaccination status, hospital admissions, bed net use, breastfeeding status, household possessions, rainfall, geographical position, distance to health centres etc. Understanding the drivers of childhood mortality is complicated and it is our hope is that the novel Sufficient Cause Learning method will help generate new hypotheses on combinations of exposures that will eventually help us identify central points of interventions to reduce child morbidity and mortality in Guinea Bissau.

We will use the 4 phases in synergistic cause learning to outline this study protocol.

- Causal structure
- ML model
- Interpretation
- Deductive testing

*Both rural and urban in one study... or two different?*



# Study design

The study population are all children followed from 3 months to 3 years born between 2003 to 2019. The inclusion criteria is to have been registeret at the Bandim Health Project before birth or at birth.




Children who emmigrate...

Chidlren who becomes censored (migrate)...



\newpage
\blandscape
# Baseline variables
Presentation of variables and their destribution (including missingness)

We present data from all children born in 2014 and registered at the Bandim Health Project before or at brith. The total number of children are ____.

```{r, eval=FALSE}
library(knitr)
#tab <- cbind(names(cohort)[1:20],names(cohort)[21:40],names(cohort)[41:60],c(names(cohort)[61:77],"","",""))
tab <- data.frame(Variables=NA,Destribution = NA, Missing = NA)

info <- function(navn,var_row, cat=F, mis_cut = 30) {
t1 <- navn
if (cat == F) {
  t2 <- paste0(summary(cohort[,var_row])[c(1,4,6),],collapse = ", ")
  t3 <- sum(is.na(cohort[,var_row]))
  }
  if (cat ==T) {
temp <- cbind(names(summary(as.factor(as.matrix(cohort[,var_row]))))," (n=",
summary(as.factor(as.matrix(cohort[,var_row]))),")")
temp_2 = NULL
for (i in 1:nrow(temp)) temp_2[i] <- paste0(temp[i,],collapse = "")
t2 <- paste0(temp_2, collapse = ", ")
t3 <- sum(is.na(cohort[,var_row])|cohort[,var_row]>=mis_cut)
}
return(c(t1,t2,t3))
}

#names(cohort)
tab[1,] <- info("Date of birth",3) #DOB
tab[2,] <- info("registration date",4) #regdia
tab[3,] <- info("Sex","sex_sql",cat=T)
tab[4,] <- info("Twins","birth_littersize_sql",cat=T, mis_cut=9)
tab[5,] <- info("Mother alive","mother_alive_sql",cat=T)
tab[6,] <- info("Father alive","father_alive_sql",cat=T)
tab[7,] <- info("Birth location","birth_location_sql",cat=T)
tab[8,] <- info("Sectio","birth_caesarian_sql",cat=T)
cohort$birthnumber_sql <- ifelse(cohort$birthnumber_sql > 6 & cohort$birthnumber_sql < 20,6,cohort$birthnumber_sql)
tab[9,] <- info("Previous pregnancie","birthnumber_sql",cat=T)
cohort$childrenalive_sql <- ifelse(cohort$childrenalive_sql > 6 & cohort$birthnumber_sql < 20,6,cohort$childrenalive_sql)
tab[10,] <- info("Number of siblings alive","childrenalive_sql",cat=T)
tab[11,1] <- "Mothers age"
tab[12,] <- info("Mothers date of birth","m_dob_sql")
tab[13,] <- info("Antenatal care","mother_anyconsultations_sql", cat=T)
tab[14,] <- info("Child born in Bissau","birth_inbissau_sql", cat=T)
cohort$birthweight_sql <- ifelse(cohort$birthweight_sql > 10000,NA,cohort$birthweight_sql)
tab[15,] <- info("Weight at hospital / birth weight","birthweight_sql")
cohort$weightatobsdate_sql <- ifelse(cohort$weightatobsdate_sql > 50000,NA,cohort$weightatobsdate_sql)
tab[16,] <- info("Weight","weightatobsdate_sql")
tab[17,1] <- "MUAC (mm)"
tab[18,1] <- "Child hosp since last visit"
tab[19,1] <- "BCG vaccination"
tab[20,1] <- "DTP doses (to be included)"
tab[21,1] <- "BCG Scar (child)"
tab[22,] <- info("BCG scar (mother)","motherbcgscar_sql",cat=T)
tab[23,1] <- "Bed net use"
tab[24,1] <- "Crowding"
tab[25,1] <- "Geographical position"
tab[26,1] <- "Distance to health centers"
cohort$ethnicity_sql <- ifelse(cohort$ethnicity_sql > 90,NA,cohort$ethnicity_sql)
tab[27,] <- info("Ethnicity", "ethnicity_sql",cat=F)
tab[28,] <- info("Type of roof", "roof_sql",cat=T)
tab[29,] <- info("Electricity", "electricity_sql",cat=T)
tab[30,] <- info("Television", "tv_sql",cat=T)
tab[31,] <- info("Toilet", "toilet_sql",cat=T)
tab[32,1] <- "Pigs in the house"
cohort$mother_schooling_sql <- ifelse(cohort$mother_schooling_sql > 20,NA,cohort$mother_schooling_sql)
tab[33,] <- info("Maternal schooling", "mother_schooling_sql")
tab[34,] <- info("Maternal supplementary education", "mother_suppleducation_sql",cat=T)
tab[35,] <- info("The mother can read", "mother_read_sql",cat=T)
tab[36,] <- info("The mother can write", "mother_write_sql",cat=T)
tab[37,] <- info("The mother lives with the father", "mother_liveswithfather_sql",cat=T)
tab[38,] <- info("Co-wife", "mother_anycowifes_sql",cat=T)
tab[39,] <- info("Mother works outside the house", "mother_workoutsidehouse_sql",cat=T)
tab[40,] <- info("Mother work occupation", "mother_workcode_sql",cat=T)
tab[41,] <- info("Father has work", "father_haswork_sql",cat=T)
cohort$father_workcode_sql <- ifelse(cohort$father_workcode_sql > 1000,NA,cohort$father_workcode_sql)
tab[42,] <- info("Father workcode", "father_workcode_sql",cat=F)


kable(tab)

```

birthnumber_sql + childrenalive_sql: 6 = 6+.

Below is shown the destribution of number of missing values among the children. Variables with NA in the description are **not** included.

```{r, fig.height=3,fig.align="center", eval=FALSE}
#names(cohort)
tab <- data.frame(is.na(cohort[,3])) #DOB
tab[,2] <- is.na(cohort[,4]) #regdia
tab[,3] <- (cohort[,"sex_sql"]>=30) # sex
tab[,4] <- (cohort[,"birth_littersize_sql"]>=9) # twin
tab[,5] <- (cohort[,"mother_alive_sql"]>=30) # Mother
tab[,6] <- (cohort[,"father_alive_sql"]>=30) # Father
tab[,7] <- (cohort[,"birth_location_sql"]>=30) # Birth
tab[,8] <- (cohort[,"birth_caesarian_sql"]>=30) # Sectio
tab[,9] <- (cohort[,"birthnumber_sql"]>=30) # Previous pregnancie
tab[,10] <- (cohort[,"childrenalive_sql"]>=30) # Number of siblings alive
tab[,11] <- is.na(cohort[,"m_dob_sql"]) # Mothers date of birth
tab[,12] <- (cohort[,"mother_anyconsultations_sql"]>=30) # Antenatal care
tab[,13] <- (cohort[,"birth_inbissau_sql"]>=30) #Child born in Bissau
tab[,14] <- is.na(cohort[,"birthweight_sql"]) #""Weight at hospital / birth weigh
tab[,15] <- is.na(cohort[,"weightatobsdate_sql"]) #""Weight
tab[,16] <- (cohort[,"motherbcgscar_sql"]>=30) #""BCG scar (mother)
tab[,17] <- (cohort[,"ethnicity_sql"]>=30) #"Ethnicity
tab[,18] <- (cohort[,"roof_sql"]>=30) #"Type of roof
tab[,19] <- (cohort[,"electricity_sql"]>=90) #"Electricity
tab[,20] <- (cohort[,"tv_sql"]>=30) #"Television
tab[,21] <- (cohort[,"toilet_sql"]>=30) #"Toilet
tab[,22] <- is.na(cohort[,"mother_schooling_sql"]) #"Maternal schooling
tab[,23] <- (cohort[,"mother_suppleducation_sql"]>=30) #"Maternal supplementary education
tab[,24] <- (cohort[,"mother_read_sql"]>=30) #"The mother can read
tab[,25] <- (cohort[,"mother_write_sql"]>=30) #"The mother can write
tab[,26] <- (cohort[,"mother_liveswithfather_sql"]>=30) #"The mother lives with the father
tab[,27] <- (cohort[,"mother_anycowifes_sql"]>=30) #"Co-wife
tab[,28] <- (cohort[,"mother_workoutsidehouse_sql"]>=30) #"Mother works outside the house
tab[,29] <- (cohort[,"mother_workcode_sql"]>=30) #"Mother work occupation
tab[,30] <- (cohort[,"father_haswork_sql"]>=30) #"Father has work
tab[,31] <- is.na(cohort[,"father_workcode_sql"]) #Father workcode

all <- 0
for (i in 1:nrow(tab)) {
  all[i] <- ncol(tab) - sum(as.numeric(tab[i,])==0,na.rm=T)
}
par(mar=c(4,3,1,0))
hist(all, main ="", xlab = "Number of missing values",xlim=c(0,ncol(tab)),breaks = 20,axes=F,yaxs='i',col="grey")
axis(2)
axis(1,0:ncol(tab)+.5,tick = F,labels = 0:ncol(tab))
axis(1,0:ncol(tab),labels = F)
# for (i in 1:ncol(tab)) {
#   print(nrow(tab) - sum(as.numeric(tab[,i])==0,na.rm=T))
#   }

```

\elandscape
\newpage

## Cohort split
The cohort will be split into:

- The inductive cohort born from ___ to ___.
- The deductive cohort born from ___ to ___.

## Time dependencies
We will not update variables when new information is available.

## Missing data
Imputation and missing data. (to be discussed)

# Causal structure
A causal structure will be outlined.

# Classical analysis
We plan on presenting all unadjusted associations, and adjusted according to the causal structure. The classical analysis is simple a reference analysis, whereas the Synergistic Cause Learning approach is the primary analysis.

# Synergistic Cause Learning
We will use the 4 phases in synergistic cause learning to outline this study.

- Causal structure
- ML model
- Interpretation
- Deductive testing

-->
