library(OpenStreetMap)
library(ggplot2)
library(rgdal)
LON1 =min(gps$MEAN_Y) - 200 ; LON2 = max(gps$MEAN_Y) + 200
LAT1 = min(gps$MEAN_X)  - 200; LAT2 = max(gps$MEAN_X) + 200
utmcoor_range <-SpatialPoints(rbind(c(LAT1,LON1),c(LAT2,LON2)), proj4string=CRS("+proj=utm +zone=28 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0 ")) # +proj=utm +datum=WGS84
longlatcoor_range<-spTransform(utmcoor_range,CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
map <- openmap(c(longlatcoor_range@coords[2,2],longlatcoor_range@coords[1,1]),
c(longlatcoor_range@coords[1,2],longlatcoor_range@coords[2,1]),
type = c( "bing"),mergeTiles = TRUE, zoom=17)
map.latlon <- openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
OSMap <- autoplot.OpenStreetMap(map.latlon)
utmcoor<-SpatialPoints(cbind(gps$MEAN_X,gps$MEAN_Y), proj4string=CRS("+proj=utm +zone=28 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0 "))
longlatcoor<-spTransform(utmcoor,CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
longlatcoor <- data.frame(longlatcoor@coords)
shape <- readOGR("P:/Studier/1000_days/Mapping/Urban/The_BHP_GIS_package/Urban/Map/zoneWith34and77TABZsplit94.shp")
shape <- spTransform(shape, CRS("+proj=longlat +datum=WGS84"))
shapeRoad <- readOGR("P:/Studier/1000_days/Mapping/Urban/The_BHP_GIS_package/Urban/Map/road.shp")
shapeRoad <- spTransform(shapeRoad, CRS("+proj=longlat +datum=WGS84"))
shapeMerge <- readOGR("P:/Studier/1000_days/Mapping/Urban/The_BHP_GIS_package/Urban/Map/zoneMerge.shp")
shapeMerge <- spTransform(shapeMerge, CRS("+proj=longlat +datum=WGS84"))
OSMap +
geom_point(data=longlatcoor, aes(x=coords.x1, y=coords.x2), size=3, shape=16, col = gps$TABZ)
dev.off()
OSMap +
geom_point(data=longlatcoor, aes(x=coords.x1, y=coords.x2), size=3, shape=16, col = gps$TABZ)
OSMap +
#geom_point(data=longlatcoor, aes(x=coords.x1, y=coords.x2), size=1, shape=16, col = "red") +
geom_path(data = shapeRoad,
aes(x = long, y = lat, group = group),
color = 'darkgrey', size = .2) +
geom_path(data = shape,
aes(x = long, y = lat, group = group),
color = 'black', size = .2) +
geom_path(data = shapeMerge,
aes(x = long, y = lat, group = group),
color = 'red', size = .2)
OSMap + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 2010-2012\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
# Prepare plots
setwd("P:/Studier/1000_days/Mapping/Urban/The_BHP_GIS_package/Urban")
# The spartial analysis were inspired by the BHP GIS Package
###############
# load packages
library(rgdal)
library(ggplot2)
library(foreign)
library(MASS)
library(hexbin)
library(reshape2)
library(gridExtra)
library(RColorBrewer)
###############
# load the set of addresses
addr <- read.table("addrCoor/addrCoor2015.txt")
###############
# exaple - plotting drinking water 2015?
census2015 <- read.dta("SESforAnalysis.dta")
# please note that the census2015 data has been pre-processed. E.g. the drinkWater groups are now:
# 2: bottled/bagged water or tap in household
# 3: tap in another household
# 5: fontenario (covered well) or well in house
# 6: pond/river/rain or well in another house
names(census2015) <- c("drinkWater", "hhNo", "camo", "tabz")
plotData <- merge(addr, census2015, by = c("tabz", "camo"), all.x = TRUE, all.y = TRUE)
###############
# load the map
shape <- readOGR("Map" , layer = "zoneWith34and77TABZsplit94")
shapeRoad <- readOGR("Map" , layer = "road")
shapeMerge <- readOGR("Map" , layer = "zoneMerge")
# define an empty map
p <- ggplot() +
geom_path(data = shape,
aes(x = long, y = lat, group = group),
color = 'gray', fill = 'white', size = .2) +
#geom_path(data = shapeMerge,
#                        aes(x = long, y = lat, group = group),
#                       color = 'gray', fill = 'white', size = .2) +
#remove/add the three above #'s to add/remove houses to the plot
geom_path(data = shapeRoad,
aes(x = long, y = lat, group = group),
color = 'gray', fill = 'white', size = .2) +
coord_equal() +
theme_bw() +
theme(
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()
) +
xlab(NULL) + ylab(NULL) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL)
p
# now plot something on top of the map
pWater <- p + geom_point(data = plotData, aes(x = X, y = Y, col = as.factor(drinkWater)))
pWater
# please note the overplotting we've done made here. We the coordinates only on a house level,
# but each household has its own value of drinkWater. Adding some jitter to the points might help in some cases,
# however, we might need to do something else to make a sensible map.
p + geom_point(data = plotData, aes(x = X, y = Y, col = as.factor(drinkWater)), position = position_jitter(width = 20, height = 20))
# the amount of jitter might be too small or too large and the plot is still not easily read.
# This should only serve as an example of how the mapping can be done in R.
# Some familiarity with ggplot2 will render endless possibilities for creating informative maps.
################################
# adding zones to the plot
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(group), fill = as.factor(TABZ)), col = "black") +
guides(fill = FALSE)
# color according to bairro
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = as.factor(bairro)), col = "black") +
guides(fill = FALSE)
################################
# we can map some variable to the zones
# just create some variable
shape@data$TABZ # the NAs in this variable correspond to objects that are not zones (e.g. groups). Also note that zone 94 consists of two polygons as this zone is divided by a road.
shape@data$var <- NA
shape@data$var[shape@data$TABZ == 11] <- 2
shape@data$var[shape@data$TABZ == 17] <- 4
shape@data$var[shape@data$TABZ == 18] <- 5
shape@data$var[shape@data$TABZ == 12] <- 2.4
shape@data$var[shape@data$TABZ == 13] <- 1
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = var), col = "black") +
labs(fill = "Title") + # change the legend title here
scale_fill_continuous(low = "blue", high = "red") # change the colors here
################################
setwd("P:/Studier/1000_days/Figures")
# Plot according to child mortality per zone 1987-2012 (via firsttabz, R_QST_Zone giver vÃ¦rdier 1-9?)
library(haven)
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate.dta"))
zone_mort <- zone_mort[,c(1,4)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
OSMap + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red" , limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 1987-2012\nNot all zones have been followed in the same time periods\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
shape <- spTransform(shape, CRS("+proj=longlat +datum=WGS84"))
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
OSMap + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red" , limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 1987-2012\nNot all zones have been followed in the same time periods\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
# Prepare plots
setwd("P:/Studier/1000_days/Mapping/Urban/The_BHP_GIS_package/Urban")
######## Mapping pm a satelite photo ##########
library(haven)
cohort <- read_dta("P:/Studier/1000_days/Mapping/Urban/data/BBASE_BASELINE_DATA_WITH_MOTHER_BIRTHCOHORT_2014.dta")
vis <- read_dta("P:/Studier/1000_days/Mapping/Urban/data/BBASE_CHILD_VISITS_BIRTHCOHORT_2014.DTA")
gps <- read_dta("P:/Studier/1000_days/Mapping/Urban/data/HOUSE_COORDINATES_BISSAU.DTA")
crowding <- read_dta("P:/Studier/1000_days/Mapping/Urban/data/BBASE_BIRTHCOHORT_2014_CROWDING.DTA")
names(cohort)
names(vis)
par(mfrow=c(1,1))
plot(gps$MEAN_X,gps$MEAN_Y, pch = 16, cex=0.3)
library(raster)
library(rJava)
library(OpenStreetMap)
library(ggplot2)
library(rgdal)
LON1 =min(gps$MEAN_Y) - 200 ; LON2 = max(gps$MEAN_Y) + 200
LAT1 = min(gps$MEAN_X)  - 200; LAT2 = max(gps$MEAN_X) + 200
utmcoor_range <-SpatialPoints(rbind(c(LAT1,LON1),c(LAT2,LON2)), proj4string=CRS("+proj=utm +zone=28 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0 ")) # +proj=utm +datum=WGS84
longlatcoor_range<-spTransform(utmcoor_range,CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
map <- openmap(c(longlatcoor_range@coords[2,2],longlatcoor_range@coords[1,1]),
c(longlatcoor_range@coords[1,2],longlatcoor_range@coords[2,1]),
type = c( "bing"),mergeTiles = TRUE, zoom=17)
map.latlon <- openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
OSMap <- autoplot.OpenStreetMap(map.latlon)
utmcoor<-SpatialPoints(cbind(gps$MEAN_X,gps$MEAN_Y), proj4string=CRS("+proj=utm +zone=28 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0 "))
longlatcoor<-spTransform(utmcoor,CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
longlatcoor <- data.frame(longlatcoor@coords)
# The below spartial analysis were inspired by the BHP GIS Package
###############
# load packages
library(rgdal)
library(ggplot2)
library(foreign)
library(MASS)
library(hexbin)
library(reshape2)
library(gridExtra)
library(RColorBrewer)
###############
# load the set of addresses
addr <- read.table("addrCoor/addrCoor2015.txt")
###############
# exaple - plotting drinking water 2015?
census2015 <- read.dta("SESforAnalysis.dta")
# please note that the census2015 data has been pre-processed. E.g. the drinkWater groups are now:
# 2: bottled/bagged water or tap in household
# 3: tap in another household
# 5: fontenario (covered well) or well in house
# 6: pond/river/rain or well in another house
names(census2015) <- c("drinkWater", "hhNo", "camo", "tabz")
plotData <- merge(addr, census2015, by = c("tabz", "camo"), all.x = TRUE, all.y = TRUE)
###############
# load the map
shape <- readOGR("Map" , layer = "zoneWith34and77TABZsplit94")
shapeRoad <- readOGR("Map" , layer = "road")
shapeMerge <- readOGR("Map" , layer = "zoneMerge")
# define an empty map
p <- ggplot() +
geom_path(data = shape,
aes(x = long, y = lat, group = group),
color = 'gray', fill = 'white', size = .2) +
#geom_path(data = shapeMerge,
#                        aes(x = long, y = lat, group = group),
#                       color = 'gray', fill = 'white', size = .2) +
#remove/add the three above #'s to add/remove houses to the plot
geom_path(data = shapeRoad,
aes(x = long, y = lat, group = group),
color = 'gray', fill = 'white', size = .2) +
coord_equal() +
theme_bw() +
theme(
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()
) +
xlab(NULL) + ylab(NULL) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL)
p
# now plot something on top of the map
pWater <- p + geom_point(data = plotData, aes(x = X, y = Y, col = as.factor(drinkWater)))
pWater
# please note the overplotting we've done made here. We the coordinates only on a house level,
# but each household has its own value of drinkWater. Adding some jitter to the points might help in some cases,
# however, we might need to do something else to make a sensible map.
p + geom_point(data = plotData, aes(x = X, y = Y, col = as.factor(drinkWater)), position = position_jitter(width = 20, height = 20))
# the amount of jitter might be too small or too large and the plot is still not easily read.
# This should only serve as an example of how the mapping can be done in R.
# Some familiarity with ggplot2 will render endless possibilities for creating informative maps.
################################
# adding zones to the plot
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(group), fill = as.factor(TABZ)), col = "black") +
guides(fill = FALSE)
# color according to bairro
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = as.factor(bairro)), col = "black") +
guides(fill = FALSE)
################################
# we can map some variable to the zones
# just create some variable
shape@data$TABZ # the NAs in this variable correspond to objects that are not zones (e.g. groups). Also note that zone 94 consists of two polygons as this zone is divided by a road.
shape@data$var <- NA
shape@data$var[shape@data$TABZ == 11] <- 2
shape@data$var[shape@data$TABZ == 17] <- 4
shape@data$var[shape@data$TABZ == 18] <- 5
shape@data$var[shape@data$TABZ == 12] <- 2.4
shape@data$var[shape@data$TABZ == 13] <- 1
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = var), col = "black") +
labs(fill = "Title") + # change the legend title here
scale_fill_continuous(low = "blue", high = "red") # change the colors here
################################
# Background map instead of p
shape <- spTransform(shape, CRS("+proj=longlat +datum=WGS84"))
setwd("P:/Studier/1000_days/Figures")
# Plot according to child mortality per zone 1987-2012 (via firsttabz, R_QST_Zone giver vÃ¦rdier 1-9?)
library(haven)
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate.dta"))
zone_mort <- zone_mort[,c(1,4)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
OSMap + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red" , limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 1987-2012\nNot all zones have been followed in the same time periods\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
png("zones_1987_2012.png",res=300,units = "in",width = 8,height = 5)
OSMap + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red" , limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 1987-2012\nNot all zones have been followed in the same time periods\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
# Alternativt: p + ...
dev.off()
#"1987-1994"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==1)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- shape@data[,1:8]
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
png("zones_1987_1994.png",res=300,units = "in",width = 8,height = 5)
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 1987-1994\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
dev.off()
#"1995-1999"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==2)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- shape@data[,1:8]
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
png("zones_1995_1999.png",res=300,units = "in",width = 8,height = 5)
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 1995-1999\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
dev.off()
#"2000-2004"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==3)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- shape@data[,1:8]
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
png("zones_2000_2004.png",res=300,units = "in",width = 8,height = 5)
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 2000-2004\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
dev.off()
#"2005-2009"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==4)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- shape@data[,1:8]
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
png("zones_2005-2009.png",res=300,units = "in",width = 8,height = 5)
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 2005-2009\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
dev.off()
#"2010-2012"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==5)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- shape@data[,1:8]
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
png("zones_2010-2012.png",res=300,units = "in",width = 8,height = 5)
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 2010-2012\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
dev.off()
#"1987-1994"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==1)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- shape@data[,1:8]
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 1987-1994\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
View(shape@data)
#"1987-1994"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==1)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
View(zone_mort)
dim(shape@data)
shape@data <- shape@data[,1:8]
View(zone_mort)
View(shape@data)
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
p + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 1987-1994\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
OSMap + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 1987-1994\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
#"1987-1994"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==1)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- shape@data[,1:8]
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
png("zones_1987_1994.png",res=300,units = "in",width = 8,height = 5)
OSMap + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 1987-1994\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
dev.off()
#"1995-1999"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==2)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- shape@data[,1:8]
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
png("zones_1995_1999.png",res=300,units = "in",width = 8,height = 5)
OSMap + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 1995-1999\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
dev.off()
#"2000-2004"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==3)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- shape@data[,1:8]
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
png("zones_2000_2004.png",res=300,units = "in",width = 8,height = 5)
OSMap + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 2000-2004\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
dev.off()
#"2005-2009"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==4)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- shape@data[,1:8]
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
png("zones_2005-2009.png",res=300,units = "in",width = 8,height = 5)
OSMap + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 2005-2009\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
dev.off()
#"2010-2012"
zone_mort <- data.frame(read_dta("P:/Studier/1000_days/Data_R/zone_strate_birthyeargroups.dta"))
zone_mort <- subset(zone_mort,Birthyear_groups==5)
zone_mort <- zone_mort[,c(1,5)]
colnames(zone_mort)[1] <- "TABZ"
dim(shape@data)
shape@data <- shape@data[,1:8]
shape@data <- merge(shape@data,zone_mort,by.x="TABZ",all.x=T)
shape.df <- fortify(shape)
shape.dfM <- merge(shape.df, shape@data, by = "id")
png("zones_2010-2012.png",res=300,units = "in",width = 8,height = 5)
OSMap + geom_polygon(data = subset(shape.dfM, !is.na(TABZ)), aes(x = long, y = lat,
group = as.factor(TABZ), fill = X_Rate), col = "black") +
labs(fill = "deahs per\n1000 PYRS") + # change the legend title here
scale_fill_continuous(low = "white", high = "red", limits=c(0,max(shape@data$X_Rate,na.rm = T))) +
ggtitle("Plot according to child mortality per zone 2010-2012\nOBS: changing scale!\n(via firsttabz, R_QST_Zone returns values 1-9, @Ane?)")
dev.off()
