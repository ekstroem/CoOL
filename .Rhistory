library(SRCL)
library(SRCL)
setwd("C:/Users/lvb917/Google Drev/gdrive - SCL/Manuscripts/Epi paper/Figures/Redo")
set.seed(1)
data <- CoOL_0_working_example(n=40000) # use 40 000 to replicate the paper
outcome_data <- data[,1]
exposure_data <- data[,-1]
for (i in 1:ncol(exposure_data)) {exposure_data[,i] <- factor(exposure_data[,i])}
data <- CoOL_0_working_example(n=40000) # use 40 000 to replicate the paper
outcome_data <- data[,1]
exposure_data <- data[,-1]
for (i in 1:ncol(exposure_data)) {exposure_data[,i] <- factor(exposure_data[,i])}
exposure_data <- mltools::one_hot(data.table::as.data.table(exposure_data))
model <- SRCL_1_initiate_neural_network(inputs=ncol(exposure_data), output = outcome_data,hidden=5)
model <- CoOL_1_initiate_neural_network(inputs=ncol(exposure_data), output = outcome_data,hidden=5)
model <- CoOL_2_train_neural_network(lr = 1e-4,X_train=exposure_data, Y_train=outcome_data,X_test=exposure_data, Y_test=outcome_data, model=model, epochs=2000,patience = 100, L1 = 1e-4) # Train the non-negative model (The model can be retrained)
remove.packages("SRCL", lib="~/R/win-library/4.0")
library(CoOL)
library(CoOL)
# Tutorial:
#library(SRCL) # library(SRCL)
library(CoOL) # library(SRCL)
setwd("C:/Users/lvb917/Google Drev/gdrive - SCL/Manuscripts/Epi paper/Figures/Redo")
set.seed(1)
data <- CoOL_0_working_example(n=40000) # use 40 000 to replicate the paper
outcome_data <- data[,1]
exposure_data <- data[,-1]
for (i in 1:ncol(exposure_data)) {exposure_data[,i] <- factor(exposure_data[,i])}
exposure_data <- mltools::one_hot(data.table::as.data.table(exposure_data))
model <- CoOL_1_initiate_neural_network(inputs=ncol(exposure_data), output = outcome_data,hidden=5)
model <- CoOL_2_train_neural_network(lr = 1e-4,X_train=exposure_data, Y_train=outcome_data,X_test=exposure_data, Y_test=outcome_data, model=model, epochs=2000,patience = 100, L1 = 1e-4) # Train the non-negative model (The model can be retrained)
