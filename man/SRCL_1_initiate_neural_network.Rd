% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SRCL_functions.R
\name{SRCL_1_initiate_neural_network}
\alias{SRCL_1_initiate_neural_network}
\title{Initiates a monotonistc neural network}
\usage{
SRCL_1_initiate_neural_network(inputs, hidden, confounder = FALSE)
}
\arguments{
\item{inputs}{The number of exposures.}

\item{hidden}{Number of hidden nodes.}

\item{confounder}{Allows to control away a confounder (connected to the output layer)}
}
\description{
This function initiates a monotonistc neural network. The one-hidden layer monotonistic neural network is designed to resemble a DAG with hidden synergistic components. With the model, we intend to learn the various synergistic interactions between the exposures and outcome. The model needs to be monotonistic and estimate the risk on an additive scale. Neural networks include hidden activation functions (if the sum of the input exceeds a threshold, information is passed on), which can model minimum threshold values of interactions between exposures. We need to specify the upper limit of the number of possible hidden activation functions and through model fitting, the model may be able to learn both stand-alone and synergistically interacting factors.
}
\details{
The monotonistic neural network can be denoted as:
\deqn{
P(Y=1|X^+)=\sum_{j}\Big(w_{j,k}^+ReLU_j\big(\sum_{i}(w_{i,j}^+X_i^+) + b_j^-\big)\Big) + R^{b}
}
}
\examples{
#See the example under SRCL_0_synthetic_data

}
