% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cpp_train_network_relu}
\alias{cpp_train_network_relu}
\title{Function used as part of other functions}
\usage{
cpp_train_network_relu(
  x,
  y,
  testx,
  testy,
  W1_input,
  B1_input,
  W2_input,
  B2_input,
  lr = 0.01,
  maxepochs = 100,
  input_parameter_reg = 1e-06
)
}
\arguments{
\item{x}{A matrix of predictors for the training dataset of shape (nsamples, nfeatures)}

\item{y}{A vector of output values for the training data with a length similar to the number of rows of x}

\item{testx}{A matrix of predictors for the test dataset of shape (nsamples, nfeatures)}

\item{testy}{A vector of output values for the test data with a length similar to the number of rows of x}

\item{W1_input}{Input-hidden layer weights of shape (nfeatuers, hidden)}

\item{B1_input}{Biases for the hidden layer of shape (1, hidden)}

\item{W2_input}{Hidden-output layer weights of shape (hidden, 1)}

\item{B2_input}{Bias for the output layer (the baseline risk) af shape (1, 1)}

\item{lr}{Initial learning rate}

\item{maxepochs}{The maximum number of epochs}

\item{input_parameter_reg}{Regularisation decreasing parameter value at each iteration for the input parameters}
}
\value{
A list of class "SCL" giving the estimated matrices and performance indicators
}
\description{
Non-negative neural network
}
\author{
Andreas Rieckmann, Piotr Dworzynski, Leila Arras, Claus Ekstr√∏m
}
